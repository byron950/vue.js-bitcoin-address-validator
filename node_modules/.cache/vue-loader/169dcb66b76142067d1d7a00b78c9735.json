{"remainingRequest":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/ui/AddressBox.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/ui/AddressBox.vue","mtime":1701186499702},{"path":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/node_modules/babel-loader/lib/index.js","mtime":1701196074971},{"path":"/Users/byron/node_modules/cache-loader/dist/cjs.js","mtime":1688985552872},{"path":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/node_modules/vue-loader/dist/index.js","mtime":1701196075162}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBpbmplY3Q6IFsnY2hlY2tBZGRyZXNzJ10sCiAgbWV0aG9kczogewogICAgc3VibWl0QWRkcmVzcygpIHsKICAgICAgY29uc3QgYWRkcmVzcyA9IHRoaXMuJHJlZnMuYnRjQWRkcmVzcy52YWx1ZTsKICAgICAgdGhpcy5jaGVja0FkZHJlc3MoYWRkcmVzcyk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/ui/AddressBox.vue"],"names":[],"mappings":";AAWA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACd,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF;AACF","file":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/ui/AddressBox.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"input-group\">\n    <label for=\"btcAddress\">Enter Address:</label>\n    <input type=\"text\" placeholder=\"BTC Address\" ref=\"btcAddress\"/>\n  </div>\n  <div class=\"button-submit\">\n    <the-button buttonText=\"Check Address\" @click=\"submitAddress\"></the-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  inject: ['checkAddress'],\n  methods: {\n    submitAddress() {\n      const address = this.$refs.btcAddress.value;\n      this.checkAddress(address);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.input-group {\n  display: flex;\n  justify-content: center;\n  align-items: center; /* This will vertically align your label and input */\n  gap: 1rem; /* This adds space between your label and input */\n  margin-top: 20px;\n}\n\nlabel {\n  /* Add any specific styles for your label here */\n  white-space: nowrap; /* Prevents the label from wrapping */\n}\n\ninput[type=\"text\"] {\n  /* Add any specific styles for your input here */\n  flex-grow: 0.2; /* Allows the input to take up available space */\n}\n\n/* Add media query for responsive design if necessary */\n@media (max-width: 600px) {\n  .input-group {\n    flex-direction: column; /* Stack them on smaller screens */\n  }\n}\n</style>"]}]}