{"remainingRequest":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/functionality/CheckAddress.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/functionality/CheckAddress.vue","mtime":1701186499702},{"path":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/node_modules/babel-loader/lib/index.js","mtime":1701196074971},{"path":"/Users/byron/node_modules/cache-loader/dist/cjs.js","mtime":1688985552872},{"path":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/node_modules/vue-loader/dist/index.js","mtime":1701196075162}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBUaGVPdXRwdXRGaWVsZCBmcm9tICIuLi9sYXlvdXQvVGhlT3V0cHV0RmllbGQudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWRkcmVzc0ZpbmFsOiBTdHJpbmcKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7IFRoZU91dHB1dEZpZWxkIH0sCiAgbWV0aG9kczogewogICAgY2hlY2tBZGRyZXNzKGFkZHJlc3MpIHsKICAgICAgY29uc3QgbWVtcG9vbFVybCA9IGBodHRwczovL21lbXBvb2wuc3BhY2UvYXBpL2FkZHJlc3MvJHthZGRyZXNzfWA7CiAgICAgIGZldGNoKG1lbXBvb2xVcmwpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKS50aGVuKGRhdGEgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgIHRoaXMuYWRkcmVzc0ZpbmFsID0gJ3ZhbGlkJzsKICAgICAgICByZXR1cm4gYWRkcmVzczsKICAgICAgfSkKICAgICAgLmNhdGNoKGVycm9yID0+IHsKICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciBmZXRjaGluZyBkYXRhOiAiLCBlcnJvcik7CiAgICAgICAgdGhpcy5hZGRyZXNzRmluYWwgPSAnaW52YWxpZCc7CiAgICAgIH0pCiAgICB9LAogIH0sCiAgcHJvdmlkZSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjaGVja0FkZHJlc3M6IHRoaXMuY2hlY2tBZGRyZXNzLAogICAgICB9OwogICAgfSwKfTsK"},{"version":3,"sources":["/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/functionality/CheckAddress.vue"],"names":[],"mappings":"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","file":"/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/functionality/CheckAddress.vue","sourceRoot":"","sourcesContent":["<template>\n  <address-box></address-box>\n  <the-output-field>\n    <div v-if=\"addressFinal === 'valid'\">\n      <p>address is valid</p>\n    </div>\n    <div v-else-if=\"addressFinal === 'invalid'\">\n      <p>address is invalid</p>\n    </div>\n    <div v-else>\n    </div>\n  </the-output-field>\n</template>\n\n<script>\nimport TheOutputField from \"../layout/TheOutputField.vue\";\n\nexport default {\n  data() {\n    return {\n      addressFinal: String\n    };\n  },\n  components: { TheOutputField },\n  methods: {\n    checkAddress(address) {\n      const mempoolUrl = `https://mempool.space/api/address/${address}`;\n      fetch(mempoolUrl).then(response => response.json()).then(data => {\n        console.log(data);\n        this.addressFinal = 'valid';\n        return address;\n      })\n      .catch(error => {\n        console.error(\"Error fetching data: \", error);\n        this.addressFinal = 'invalid';\n      })\n    },\n  },\n  provide() {\n      return {\n        checkAddress: this.checkAddress,\n      };\n    },\n};\n</script> "]}]}