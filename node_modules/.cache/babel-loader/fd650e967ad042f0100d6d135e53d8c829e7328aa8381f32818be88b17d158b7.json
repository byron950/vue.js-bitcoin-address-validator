{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-78668ad2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"input-group\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"btcAddress\"\n}, \"Enter Address:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  type: \"text\",\n  placeholder: \"BTC Address\",\n  ref: \"btcAddress\"\n};\nconst _hoisted_4 = {\n  class: \"button-submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_the_button = _resolveComponent(\"the-button\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", _hoisted_3, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_the_button, {\n    buttonText: \"Check Address\",\n    onClick: $options.submitAddress\n  }, null, 8 /* PROPS */, [\"onClick\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","placeholder","ref","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_the_button","buttonText","onClick","$options","submitAddress"],"sources":["/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/ui/AddressBox.vue"],"sourcesContent":["<template>\n  <div class=\"input-group\">\n    <label for=\"btcAddress\">Enter Address:</label>\n    <input type=\"text\" placeholder=\"BTC Address\" ref=\"btcAddress\"/>\n  </div>\n  <div class=\"button-submit\">\n    <the-button buttonText=\"Check Address\" @click=\"submitAddress\"></the-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  inject: ['checkAddress'],\n  methods: {\n    submitAddress() {\n      const address = this.$refs.btcAddress.value;\n      this.checkAddress(address);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.input-group {\n  display: flex;\n  justify-content: center;\n  align-items: center; /* This will vertically align your label and input */\n  gap: 1rem; /* This adds space between your label and input */\n  margin-top: 20px;\n}\n\nlabel {\n  /* Add any specific styles for your label here */\n  white-space: nowrap; /* Prevents the label from wrapping */\n}\n\ninput[type=\"text\"] {\n  /* Add any specific styles for your input here */\n  flex-grow: 0.2; /* Allows the input to take up available space */\n}\n\n/* Add media query for responsive design if necessary */\n@media (max-width: 600px) {\n  .input-group {\n    flex-direction: column; /* Stack them on smaller screens */\n  }\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAA8C;EAAvCC,GAAG,EAAC;AAAY,GAAC,gBAAc;;EAC/BC,IAAI,EAAC,MAAM;EAACC,WAAW,EAAC,aAAa;EAACC,GAAG,EAAC;;;EAE9CL,KAAK,EAAC;AAAe;;;6DAJ1BC,mBAAA,CAGM,OAHNK,UAGM,GAFJC,UAA8C,EAC9CN,mBAAA,CAA+D,SAA/DO,UAA+D,8B,GAEjEP,mBAAA,CAEM,OAFNQ,UAEM,GADJC,YAAA,CAA2EC,qBAAA;IAA/DC,UAAU,EAAC,eAAe;IAAEC,OAAK,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}