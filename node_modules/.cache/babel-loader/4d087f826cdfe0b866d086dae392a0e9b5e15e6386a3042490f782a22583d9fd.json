{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"address is valid\", -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"address is invalid\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_address_box = _resolveComponent(\"address-box\");\n  const _component_the_output_field = _resolveComponent(\"the-output-field\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_address_box), _createVNode(_component_the_output_field, null, {\n    default: _withCtx(() => [$data.addressFinal === 'valid' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_3])) : $data.addressFinal === 'invalid' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [..._hoisted_6])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7))]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_2","_hoisted_5","_createVNode","_component_address_box","_component_the_output_field","$data","addressFinal","_createElementBlock","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_6","_hoisted_7"],"sources":["/Users/byron/Documents/code2/vue/bitcoin-address-validation/src/components/functionality/CheckAddress.vue"],"sourcesContent":["<template>\n  <address-box></address-box>\n  <the-output-field>\n    <div v-if=\"addressFinal === 'valid'\">\n      <p>address is valid</p>\n    </div>\n    <div v-else-if=\"addressFinal === 'invalid'\">\n      <p>address is invalid</p>\n    </div>\n    <div v-else>\n    </div>\n  </the-output-field>\n</template>\n\n<script>\nimport TheOutputField from \"../layout/TheOutputField.vue\";\n\nexport default {\n  data() {\n    return {\n      addressFinal: String\n    };\n  },\n  components: { TheOutputField },\n  methods: {\n    checkAddress(address) {\n      const mempoolUrl = `https://mempool.space/api/address/${address}`;\n      fetch(mempoolUrl).then(response => response.json()).then(data => {\n        console.log(data);\n        this.addressFinal = 'valid';\n        return address;\n      })\n      .catch(error => {\n        console.error(\"Error fetching data: \", error);\n        this.addressFinal = 'invalid';\n      })\n    },\n  },\n  provide() {\n      return {\n        checkAddress: this.checkAddress,\n      };\n    },\n};\n</script> "],"mappings":";;;;gCAIMA,mBAAA,CAAuB,WAApB,kBAAgB;oBAAnBC,UAAuB,C;;;;gCAGvBD,mBAAA,CAAyB,WAAtB,oBAAkB;oBAArBE,UAAyB,C;;;;;;;6DAN7BC,YAAA,CAA2BC,sBAAA,GAC3BD,YAAA,CASmBE,2BAAA;sBARjB,MAEM,CAFKC,KAAA,CAAAC,YAAY,gB,cAAvBC,mBAAA,CAEM,OAAAC,UAAA,MAAAC,UAAA,MACUJ,KAAA,CAAAC,YAAY,kB,cAA5BC,mBAAA,CAEM,OAAAG,UAAA,MAAAC,UAAA,O,cACNJ,mBAAA,CACM,OAAAK,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}